[{"C:\\Users\\Robert\\Documents\\VSC Projects\\pomodoro-timer\\src\\index.js":"1","C:\\Users\\Robert\\Documents\\VSC Projects\\pomodoro-timer\\src\\App.js":"2","C:\\Users\\Robert\\Documents\\VSC Projects\\pomodoro-timer\\src\\components\\Break.js":"3","C:\\Users\\Robert\\Documents\\VSC Projects\\pomodoro-timer\\src\\components\\Session.js":"4","C:\\Users\\Robert\\Documents\\VSC Projects\\pomodoro-timer\\src\\components\\Timeleft.js":"5"},{"size":219,"mtime":1610544037680,"results":"6","hashOfConfig":"7"},{"size":3433,"mtime":1610973553848,"results":"8","hashOfConfig":"7"},{"size":791,"mtime":1610971599763,"results":"9","hashOfConfig":"7"},{"size":837,"mtime":1610973199312,"results":"10","hashOfConfig":"7"},{"size":989,"mtime":1610972798748,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1qup2if",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\Robert\\Documents\\VSC Projects\\pomodoro-timer\\src\\index.js",[],["24","25"],"C:\\Users\\Robert\\Documents\\VSC Projects\\pomodoro-timer\\src\\App.js",["26"],"import { useEffect, useState, useRef } from 'react';\n\n// Importing components\nimport Break from './components/Break';\nimport Session from './components/Session';\nimport Timeleft from './components/Timeleft';\n\nfunction App() {\n  const audioElement = useRef(null);\n  const [sessionLength, setSessionLength] = useState(60 * 25);\n  const [breakLength, setBreakLength] = useState(60 * 5);\n  const [currentSessionType, setCurrentSessionType] = useState('Session');\n  const [intervalId, setIntervalId] = useState(null);\n  const [timeleft, setTimeleft] = useState(sessionLength);\n\n  useEffect(() => {\n    if (currentSessionType === 'Session') {\n      setTimeleft(sessionLength);\n    } else if (currentSessionType === 'Break') {\n      setTimeleft(breakLength);\n    }\n  }, [sessionLength, breakLength]);\n\n  useEffect(() => {\n    if (timeleft === 0) {\n      audioElement.current.play();\n      if (currentSessionType === 'Session') {\n        setCurrentSessionType('Break');\n        setTimeleft(breakLength);\n      } else if (currentSessionType === 'Break') {\n        setCurrentSessionType('Session');\n        setTimeleft(sessionLength);\n      }\n    }\n  }, [breakLength, currentSessionType, sessionLength, timeleft]);\n\n  const decrementBreakLengthByOneMinute = () => {\n    const newBreakLength = breakLength - 60;\n    if (newBreakLength > 0) setBreakLength(newBreakLength);\n  };\n\n  const incrementBreakLengthByOneMinute = () => {\n    const newBreakLength = breakLength + 60;\n    if (newBreakLength <= 60 * 60) setBreakLength(newBreakLength);\n  };\n\n  const decrementSessionLengthByOneMinute = () => {\n    const newSessionLength = sessionLength - 60;\n    if (newSessionLength > 0) setSessionLength(newSessionLength);\n  };\n\n  const incrementSessionLengthByOneMinute = () => {\n    const newSessionLength = sessionLength + 60;\n    if (newSessionLength <= 60 * 60) setSessionLength(newSessionLength);\n  };\n\n  const handleResetButtonClick = () => {\n    audioElement.current.load();\n    clearInterval(intervalId);\n    setIntervalId(null);\n    setCurrentSessionType('Session');\n    setSessionLength(60 * 25);\n    setBreakLength(60 * 5);\n    setTimeleft(60 * 25);\n  };\n\n  const isStarted = intervalId !== null;\n\n  const handleStartStopClick = () => {\n    if (isStarted) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    } else {\n      const newIntervalId = setInterval(() => {\n        setTimeleft((prevTimeleft) => prevTimeleft - 1);\n      }, 1000);\n      setIntervalId(newIntervalId);\n    }\n  };\n\n  return (\n    <div className='app'>\n      <div className='settings'>\n        <Break\n          breakLength={breakLength}\n          decrementBreakLengthByOneMinute={decrementBreakLengthByOneMinute}\n          incrementBreakLengthByOneMinute={incrementBreakLengthByOneMinute}\n        />\n        <Session\n          sessionLength={sessionLength}\n          decrementSessionLengthByOneMinute={decrementSessionLengthByOneMinute}\n          incrementSessionLengthByOneMinute={incrementSessionLengthByOneMinute}\n        />\n      </div>\n      <Timeleft\n        handleStartStopClick={handleStartStopClick}\n        timerLabel={currentSessionType}\n        startStopButtonLabel={isStarted ? 'Stop' : 'Start'}\n        timeleft={timeleft}\n        handleResetButtonClick={handleResetButtonClick}\n      />\n      <audio id='beep' ref={audioElement}>\n        <source src='sounds/bell.mp3' type='audio/mpeg' />\n      </audio>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Robert\\Documents\\VSC Projects\\pomodoro-timer\\src\\components\\Break.js",[],"C:\\Users\\Robert\\Documents\\VSC Projects\\pomodoro-timer\\src\\components\\Session.js",[],"C:\\Users\\Robert\\Documents\\VSC Projects\\pomodoro-timer\\src\\components\\Timeleft.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":22,"column":6,"nodeType":"33","endLine":22,"endColumn":34,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentSessionType'. Either include it or remove the dependency array.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [sessionLength, breakLength, currentSessionType]",{"range":"40","text":"41"},[763,791],"[sessionLength, breakLength, currentSessionType]"]